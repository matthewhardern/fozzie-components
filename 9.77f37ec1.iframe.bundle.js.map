{"version":3,"file":"9.77f37ec1.iframe.bundle.js","sources":["webpack:////home/runner/work/fozzie-components/fozzie-components/node_modules/@justeattakeaway/cc-braze-adapter/node_modules/@braze/web-sdk/src/Push/push-manager.js","webpack:////home/runner/work/fozzie-components/fozzie-components/node_modules/@justeattakeaway/cc-braze-adapter/node_modules/@braze/web-sdk/src/Push/push-manager-factory.js"],"sourcesContent":["import { isArray as p, isEqual as ii } from \"../util/code-utils.js\";\nimport ei from \"../models/push-token.js\";\nimport r from \"../../shared-lib/braze-shared-lib.js\";\nimport { STORAGE_KEYS as o } from \"../managers/storage-manager.js\";\nimport { User } from \"../User/index.js\";\nimport { WindowUtils as H } from \"../util/window-utils.js\";\nimport dt from \"./utils/push-utils.js\";\nexport default class aa {\n  constructor(i, e, t, s, r, n, o, u, a, c) {\n    (this.Sr = i),\n      (this._r = e),\n      (this.Ur = t),\n      (this.Wr = s + \"/safari/\" + e),\n      (this.Vr = r || \"/service-worker.js\"),\n      (this.Or = n),\n      (this.gt = o),\n      (this.Yr = u || !1),\n      (this.Gr = a || !1),\n      (this.h = c),\n      (this.Hr = dt.Jr()),\n      (this.Kr = dt.Lr());\n  }\n  Qr() {\n    return this.Gr;\n  }\n  Xr(i, e, t, s, n) {\n    i.unsubscribe()\n      .then(i => {\n        i\n          ? this.Zr(e, t, s, n)\n          : (r.D.error(\"Failed to unsubscribe device from push.\"),\n            \"function\" == typeof n && n(!1));\n      })\n      .catch(i => {\n        r.D.error(\"Push unsubscription error: \" + i),\n          \"function\" == typeof n && n(!1);\n      });\n  }\n  sn(i, e, t) {\n    const s = (i => {\n      if (\"string\" == typeof i) return i;\n      if (0 !== i.endpoint.indexOf(\"https://android.googleapis.com/gcm/send\"))\n        return i.endpoint;\n      let e = i.endpoint;\n      return (\n        i.rn &&\n          -1 === i.endpoint.indexOf(i.rn) &&\n          (e = i.endpoint + \"/\" + i.rn),\n        e\n      );\n    })(i);\n    let r = null,\n      n = null;\n    if (null != i.getKey)\n      try {\n        (r = btoa(\n          String.fromCharCode.apply(null, new Uint8Array(i.getKey(\"p256dh\")))\n        )),\n          (n = btoa(\n            String.fromCharCode.apply(null, new Uint8Array(i.getKey(\"auth\")))\n          ));\n      } catch (i) {\n        if (\"invalid arguments\" !== i.message) throw i;\n      }\n    const o = (i => {\n      let e;\n      return i.options &&\n        (e = i.options.applicationServerKey) &&\n        e.byteLength &&\n        e.byteLength > 0\n        ? btoa(String.fromCharCode.apply(null, new Uint8Array(e)))\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\")\n        : null;\n    })(i);\n    this.Sr.on(s, t, r, n, o), s && \"function\" == typeof e && e(s, r, n);\n  }\n  un() {\n    this.Sr.an(!0);\n  }\n  cn(i, e) {\n    this.Sr.an(!1), r.D.info(i), \"function\" == typeof e && e(!1);\n  }\n  hn(i, e, t, s) {\n    if (\"default\" === e.permission)\n      try {\n        window.safari.pushNotification.requestPermission(\n          this.Wr,\n          i,\n          { api_key: this._r, device_id: this.Ur.te().id },\n          e => {\n            \"granted\" === e.permission &&\n              this.Sr.setPushNotificationSubscriptionType(\n                User.NotificationSubscriptionTypes.OPTED_IN\n              ),\n              this.hn(i, e, t, s);\n          }\n        );\n      } catch (i) {\n        this.cn(\"Could not request permission for push: \" + i, s);\n      }\n    else\n      \"denied\" === e.permission\n        ? this.cn(\n            \"The user has blocked notifications from this site, or Safari push is not configured in the Braze dashboard.\",\n            s\n          )\n        : \"granted\" === e.permission &&\n          (r.D.info(\"Device successfully subscribed to push.\"),\n          this.sn(e.deviceToken, t, new Date()));\n  }\n  fn(i, e, t) {\n    const s = s => {\n      switch (s) {\n        case \"granted\":\n          return void (\"function\" == typeof i && i());\n        case \"default\":\n          return void (\"function\" == typeof e && e());\n        case \"denied\":\n          return void (\"function\" == typeof t && t());\n        default:\n          r.D.error(\"Received unexpected permission result \" + s);\n      }\n    };\n    let n = !1;\n    const o = window.Notification.requestPermission(i => {\n      n && s(i);\n    });\n    o\n      ? o.then(i => {\n          s(i);\n        })\n      : (n = !0);\n  }\n  Zr(i, e, t, s) {\n    const n = { userVisibleOnly: !0 };\n    null != e && (n.applicationServerKey = e),\n      i.pushManager\n        .subscribe(n)\n        .then(i => {\n          r.D.info(\"Device successfully subscribed to push.\"),\n            this.sn(i, t, new Date());\n        })\n        .catch(i => {\n          dt.isPushBlocked()\n            ? (r.D.info(\"Permission for push notifications was denied.\"),\n              \"function\" == typeof s && s(!1))\n            : (r.D.error(\"Push subscription failed: \" + i),\n              \"function\" == typeof s && s(!0));\n        });\n  }\n  ln() {\n    return this.Yr\n      ? navigator.serviceWorker.getRegistration()\n      : navigator.serviceWorker.register(this.Vr).then(() =>\n          navigator.serviceWorker.ready.then(\n            i => (\n              i &&\n                \"function\" == typeof i.update &&\n                i.update().catch(i => {\n                  r.D.info(\"ServiceWorker update failed: \" + i);\n                }),\n              i\n            )\n          )\n        );\n  }\n  dn(i) {\n    this.Yr ||\n      (i.unregister(), r.D.info(\"Service worker successfully unregistered.\"));\n  }\n  subscribe(i, e) {\n    if (!dt.isPushSupported())\n      return r.D.info(aa.pn), void (\"function\" == typeof e && e(!1));\n    if (this.Hr) {\n      if (!this.Yr && null != window.location) {\n        let i = this.Vr;\n        -1 === i.indexOf(window.location.host) &&\n          (i = window.location.host + i),\n          -1 === i.indexOf(window.location.protocol) &&\n            (i = window.location.protocol + \"//\" + i);\n        const t = i.substr(0, i.lastIndexOf(\"/\") + 1);\n        if (0 !== H.bn().indexOf(t))\n          return (\n            r.D.error(\n              \"Cannot subscribe to push from a path higher than the service worker location (tried to subscribe from \" +\n                window.location.pathname +\n                \" but service worker is at \" +\n                i +\n                \")\"\n            ),\n            void (\"function\" == typeof e && e(!0))\n          );\n      }\n      if (dt.isPushBlocked())\n        return void this.cn(\n          \"Notifications from this site are blocked. This may be a temporary embargo or a permanent denial.\",\n          e\n        );\n      if (this.gt && !this.gt.mn() && 0 === this.gt.Zs())\n        return (\n          r.D.info(\n            \"Waiting for VAPID key from server config before subscribing to push.\"\n          ),\n          void this.gt.gn(() => {\n            this.subscribe(i, e);\n          })\n        );\n      const t = () => {\n          r.D.info(\"Permission for push notifications was denied.\"),\n            \"function\" == typeof e && e(!1);\n        },\n        s = () => {\n          let i = \"Permission for push notifications was ignored.\";\n          dt.isPushBlocked() &&\n            (i +=\n              \" The browser has automatically blocked further permission requests for a period (probably 1 week).\"),\n            r.D.info(i),\n            \"function\" == typeof e && e(!0);\n        },\n        n = dt.isPushPermissionGranted(),\n        u = () => {\n          n ||\n            this.Sr.setPushNotificationSubscriptionType(\n              User.NotificationSubscriptionTypes.OPTED_IN\n            ),\n            this.ln()\n              .then(t => {\n                if (null == t)\n                  return (\n                    r.D.error(\n                      \"No service worker registration. Set the `manageServiceWorkerExternally` initialization option to false or ensure that your service worker is registered before calling registerPush.\"\n                    ),\n                    void (\"function\" == typeof e && e(!0))\n                  );\n                t.pushManager\n                  .getSubscription()\n                  .then(s => {\n                    let n = null;\n                    if (\n                      (this.gt &&\n                        null != this.gt.mn() &&\n                        (n = r.yn.wn(this.gt.mn())),\n                      s)\n                    ) {\n                      let u = null,\n                        a = null;\n                      const c = this.h.I(o.q.vn);\n                      if (c && !p(c)) {\n                        let i;\n                        try {\n                          i = ei.Pn(c).kn;\n                        } catch (e) {\n                          i = null;\n                        }\n                        null == i ||\n                          isNaN(i.getTime()) ||\n                          0 === i.getTime() ||\n                          ((u = i),\n                          (a = new Date(u)),\n                          a.setMonth(u.getMonth() + 6));\n                      }\n                      null != n &&\n                      s.options &&\n                      s.options.applicationServerKey &&\n                      s.options.applicationServerKey.byteLength &&\n                      s.options.applicationServerKey.byteLength > 0 &&\n                      !ii(n, new Uint8Array(s.options.applicationServerKey))\n                        ? (s.options.applicationServerKey.byteLength > 12\n                            ? r.D.info(\n                                \"Device was already subscribed to push using a different VAPID provider, creating new subscription.\"\n                              )\n                            : r.D.info(\n                                \"Attempting to upgrade a gcm_sender_id-based push registration to VAPID - depending on the browser this may or may not result in the same gcm_sender_id-based subscription.\"\n                              ),\n                          this.Xr(s, t, n, i, e))\n                        : s.expirationTime &&\n                          new Date(s.expirationTime) <= new Date().valueOf()\n                        ? (r.D.info(\n                            \"Push subscription is expired, creating new subscription.\"\n                          ),\n                          this.Xr(s, t, n, i, e))\n                        : c && p(c)\n                        ? this.Xr(s, t, n, i, e)\n                        : null == a\n                        ? (r.D.info(\n                            \"No push subscription creation date found, creating new subscription.\"\n                          ),\n                          this.Xr(s, t, n, i, e))\n                        : a <= new Date().valueOf()\n                        ? (r.D.info(\n                            \"Push subscription older than 6 months, creating new subscription.\"\n                          ),\n                          this.Xr(s, t, n, i, e))\n                        : (r.D.info(\n                            \"Device already subscribed to push, sending existing subscription to backend.\"\n                          ),\n                          this.sn(s, i, u));\n                    } else this.Zr(t, n, i, e);\n                  })\n                  .catch(i => {\n                    r.D.error(\n                      \"Error checking current push subscriptions: \" + i\n                    );\n                  });\n              })\n              .catch(i => {\n                r.D.error(\"ServiceWorker registration failed: \" + i);\n              });\n        };\n      this.fn(u, s, t);\n    } else if (this.Kr) {\n      if (null == this.Or || \"\" === this.Or)\n        return (\n          r.D.error(\n            \"You must supply the safariWebsitePushId initialization option in order to use registerPush on Safari\"\n          ),\n          void (\"function\" == typeof e && e(!0))\n        );\n      const t = window.safari.pushNotification.permission(this.Or);\n      this.hn(this.Or, t, i, e);\n    }\n  }\n  unsubscribe(i, e) {\n    if (!dt.isPushSupported())\n      return r.D.info(aa.pn), void (\"function\" == typeof e && e());\n    this.Hr\n      ? navigator.serviceWorker.getRegistration().then(t => {\n          t\n            ? t.pushManager\n                .getSubscription()\n                .then(s => {\n                  s &&\n                    (this.un(),\n                    s\n                      .unsubscribe()\n                      .then(s => {\n                        s\n                          ? (r.D.info(\n                              \"Device successfully unsubscribed from push.\"\n                            ),\n                            \"function\" == typeof i && i())\n                          : (r.D.error(\n                              \"Failed to unsubscribe device from push.\"\n                            ),\n                            \"function\" == typeof e && e()),\n                          this.dn(t);\n                      })\n                      .catch(i => {\n                        r.D.error(\"Push unsubscription error: \" + i),\n                          \"function\" == typeof e && e();\n                      }));\n                })\n                .catch(i => {\n                  r.D.error(\"Error unsubscribing from push: \" + i),\n                    \"function\" == typeof e && e();\n                })\n            : (r.D.info(\"Device already unsubscribed from push.\"),\n              \"function\" == typeof i && i());\n        })\n      : this.Kr &&\n        (this.un(),\n        r.D.info(\"Device unsubscribed from push.\"),\n        \"function\" == typeof i && i());\n  }\n}\naa.pn = \"Push notifications are not supported in this browser.\";\n","import e, { OPTIONS as T } from \"../managers/braze-instance.js\";\nimport aa from \"./push-manager.js\";\nconst ea = {\n  t: !1,\n  pushManager: null,\n  aa: () => (\n    ea.o(),\n    ea.pushManager ||\n      (ea.pushManager = new aa(\n        e.gr(),\n        e.ea(),\n        e.ce(),\n        e.Ks(),\n        e.nn(T.na),\n        e.nn(T.ra),\n        e.ir(),\n        e.nn(T.ta),\n        e.nn(T.ia),\n        e.l()\n      )),\n    ea.pushManager\n  ),\n  o: () => {\n    ea.t || (e.u(ea), (ea.t = !0));\n  },\n  destroy: () => {\n    (ea.pushManager = null), (ea.t = !1);\n  }\n};\nexport default ea;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}